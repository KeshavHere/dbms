
import java.util.Scanner;

public class JavaApplication2 {
    static node root;
    public static void main(String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.println("Enter the number of elements");
        int e = s.nextInt();
        for(int i=0;i<e;i++){
            System.out.println("Enter Pair");
            int a = s.nextInt();
            int b = s.nextInt();
            node n = new node(a,b);
            n.insert(n);
        }
        node d = new node();
        d.display(root);
        System.out.println("Enter Range to search:");
        int xmin = s.nextInt();
        int xmax = s.nextInt();
        int ymin = s.nextInt();
        int ymax = s.nextInt();
        node n = new node();
        n.search(root,xmin,xmax,ymin,ymax);
    }
    

private static  class node{
    int x;
    int y;
    node left;
    node right=null;
    node(){
    }
    node(int x,int y){
        this.x = x;
        this.y = y;
        this.left=null;
        this.right=null;
    }
    void insert(node n){
        if(root==null){
            root = new node(n.x,n.y); 
        }
        else{
            node temp = root;
            node temp1 = root;
            int flag=0,flag1=0;
            while(temp!=null){
                if(flag==0){
                    if(temp.x>n.x){
                        temp1 = temp;
                        temp = temp.left;
                    }
                    else{
                        temp1 = temp;
                        temp = temp.right;
                    }
                    flag1=flag;
                    flag=1;
                }
                 else{
                    if(temp.y>n.y){
                        temp1 = temp;
                        temp = temp.left;
                    }
                    else{
                        temp1 = temp;
                        temp = temp.right;
                    }
                    
                flag1=flag;
                flag=0;}
            } 
            if(flag1==0){
                if(n.x<temp1.x){
                    temp1.left = n;
                }
                else{
                    temp1.right = n;
                }}
            else{
                if(n.y<temp1.y){
                    temp1.left = n;
                }
                else{
                    temp1.right = n;
                }
            }
            }
           
        }
    void display(node root){
        if(root!=null){
            display(root.left);
            System.out.println("("+root.x+","+root.y+")");
            display(root.right);
        }
    }
    void search(node root,int u,int v,int w,int x){
        if(root!=null){
            search(root.left,u,v,w,x);
            if(root.x>=u&&root.x<=v&&root.y>=w&&root.y<=x){
                System.out.println("("+root.x+","+root.y+")");
            }
            search(root.right,u,v,w,x);
        }
    }
    }
    
}